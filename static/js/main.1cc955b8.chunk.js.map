{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","currentOperand","setcurrentOperand","prevOperand","setprevOperand","operation","setOperation","prevPressedBtn","setPrevPressedBtn","calculate","answer","prevNum","parseFloat","currentNum","toString","length","roundedAnswer","toPrecision","saveOperation","e","prevOps","target","innerText","includes","slice","appendNumber","num","className","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cc955b8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [currentOperand, setcurrentOperand] = useState('0');\n  const [prevOperand, setprevOperand] = useState('');\n  const [operation, setOperation] = useState('');\n  const [prevPressedBtn, setPrevPressedBtn] = useState('');\n\n  const allClear = () => {\n    setcurrentOperand('0');\n    setprevOperand('');\n    setPrevPressedBtn('');\n  };\n\n  const deleteLastNum = () => {\n    if (currentOperand.length === 1 && currentOperand !== '0') {\n      setcurrentOperand('0');\n    } else if (currentOperand !== '0' && currentOperand !== '')\n      setcurrentOperand(currentOperand.slice(0, -1));\n  };\n\n  const calculate = () => {\n    if (prevOperand === '') {\n      return;\n    }\n    let prevNum = parseFloat(prevOperand);\n    let currentNum = parseFloat(currentOperand);\n    let answer;\n    switch (operation) {\n      case '+':\n        answer = (prevNum + currentNum).toString();\n        setcurrentOperand(answer);\n        setprevOperand('');\n        break;\n      case '-':\n        answer = (prevNum - currentNum).toString();\n        setcurrentOperand(answer);\n        setprevOperand('');\n        break;\n      case 'x':\n        answer = (prevNum * currentNum).toString();\n        setcurrentOperand(answer);\n        setprevOperand('');\n        break;\n      case 'รท':\n        answer = (prevNum / currentNum).toString();\n        setcurrentOperand(answer);\n        setprevOperand('');\n        break;\n      default:\n        break;\n    }\n\n    if (answer.length >= 18) {\n      let roundedAnswer = parseFloat(answer).toPrecision(13);\n      setcurrentOperand(roundedAnswer);\n    }\n\n    setPrevPressedBtn('equals');\n  };\n\n  const saveOperation = (e) => {\n    let prevOps = operation;\n    setOperation(e.target.innerText);\n\n    if (prevPressedBtn === 'operation' && e.target.innerText === '-') {\n      setcurrentOperand(\n        currentOperand.includes('-')\n          ? currentOperand.slice(1)\n          : `-${currentOperand}`\n      );\n      setOperation(prevOps);\n    } else if (prevPressedBtn === 'operation' && e.target.innerText === '+') {\n      setcurrentOperand(\n        currentOperand.includes('-')\n          ? currentOperand.slice(1)\n          : `${currentOperand}`\n      );\n    } else if (prevOperand === '') {\n      setprevOperand(currentOperand);\n      setcurrentOperand('0');\n    } else {\n      calculate();\n    }\n\n    setPrevPressedBtn('operation');\n  };\n\n  const appendNumber = (e) => {\n    let num = e.target.innerText.toString();\n    setPrevPressedBtn(num);\n      if (currentOperand.length === 1 && currentOperand === '0') {\n      setcurrentOperand('');\n      setcurrentOperand(`${num}`);\n    } else if (prevPressedBtn === 'operation' && prevOperand === '') {\n      setprevOperand(currentOperand);\n      setcurrentOperand(`${num}`);\n    } else if (prevPressedBtn === 'operation' && currentOperand.includes('-')) {\n      setcurrentOperand(`-${num}`);\n    } else if (currentOperand.length >= 12) {\n        return '';\n    } else {\n      setcurrentOperand(`${currentOperand}${num}`);\n    }\n  };\n\n  const appendDecimal = () => {\n    if (currentOperand.length >= 18) {\n      return;\n    }\n    if (currentOperand.includes('.')) {\n      return;\n    } else {\n      setcurrentOperand(`${currentOperand}${'.'}`);\n    }\n  };\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"calc-container\">\n        <div id=\"display\">\n          <span id=\"prevOperand\">{prevOperand}</span>\n          <span id=\"currentOperand\">{currentOperand}</span>\n        </div>\n\n        <div className=\"buttons-container\">\n          <div className=\"button-row\">\n            <button id=\"clear\" onClick={allClear}>\n              AC\n            </button>\n            <button id=\"del\" onClick={deleteLastNum}>\n              del\n            </button>\n            <button id=\"divide\" onClick={saveOperation}>\n              รท\n            </button>\n          </div>\n          <div className=\"button-row\">\n            <button id=\"seven\" onClick={appendNumber}>\n              7\n            </button>\n            <button id=\"eight\" onClick={appendNumber}>\n              8\n            </button>\n            <button id=\"nine\" onClick={appendNumber}>\n              9\n            </button>\n            <button id=\"multiply\" onClick={saveOperation}>\n              x\n            </button>\n          </div>\n          <div className=\"button-row\">\n            <button id=\"four\" onClick={appendNumber}>\n              4\n            </button>\n            <button id=\"five\" onClick={appendNumber}>\n              5\n            </button>\n            <button id=\"six\" onClick={appendNumber}>\n              6\n            </button>\n            <button id=\"subtract\" onClick={saveOperation}>\n              -\n            </button>\n          </div>\n          <div className=\"button-row\">\n            <button id=\"one\" onClick={appendNumber}>\n              1\n            </button>\n            <button id=\"two\" onClick={appendNumber}>\n              2\n            </button>\n            <button id=\"three\" onClick={appendNumber}>\n              3\n            </button>\n            <button id=\"add\" onClick={saveOperation}>\n              +\n            </button>\n          </div>\n          <div className=\"button-row\" id=\"bottom-row\">\n            <button id=\"zero\" onClick={appendNumber}>\n              0\n            </button>\n            <button id=\"decimal\" onClick={appendDecimal}>\n              .\n            </button>\n            <button id=\"equals\" onClick={calculate}>\n              =\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}